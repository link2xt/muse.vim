Given muse;
* Foo

Execute (header):
  AssertEqual SyntaxOf('Foo'), 'header'

Given muse;
*emphasized*

Execute (emphasis):
  AssertEqual SyntaxOf('emphasized'), 'emphasis'

Given muse;
**strong**

Execute (strong):
  AssertEqual SyntaxOf('strong'), 'strong'

Given muse;
This is * not emphasized*.

Execute (space is not allowed after opening emphasis *):
  AssertNotEqual SyntaxOf('not emphasized'), 'emphasis'

Given muse;
foo *bar
bat* baz

Execute (multiline emphasis);
  AssertNotEqual SyntaxOf('foo'), 'emphasis'
  AssertEqual SyntaxOf('bar'), 'emphasis'
  AssertEqual SyntaxOf('bat'), 'emphasis'
  AssertNotEqual SyntaxOf('baz'), 'emphasis'

Given muse;
; This is a comment

Execute (comment):
  AssertEqual SyntaxOf('This is a comment'), 'Comment'

Given muse;
<em>foo</em> bar <em>baz</em>

Execute (<em> tag is not greedy):
  AssertEqual SyntaxOf('foo'), 'emphasisTag'
  AssertNotEqual SyntaxOf('bar'), 'emphasisTag'
  AssertEqual SyntaxOf('baz'), 'emphasisTag'

Given muse;
<example>
foo
<em>bar</em>
baz
</example>

Execute (<example> tag):
  AssertEqual SyntaxOf('foo'), 'example'
  AssertEqual SyntaxOf('bar'), 'example'
  AssertEqual SyntaxOf('baz'), 'example'

Given muse;
{{{
foo
<em>bar</em>
baz
}}}

Execute (lightweight <example> markup):
  AssertEqual SyntaxOf('foo'), 'example'
  AssertEqual SyntaxOf('bar'), 'example'
  AssertEqual SyntaxOf('baz'), 'example'

Given muse;
<verbatim>foo <em>bar</em> baz</verbatim>

Execute (verbatim):
  AssertEqual SyntaxOf('foo'), 'verbatim'
  AssertEqual SyntaxOf('bar'), 'verbatim'
  AssertEqual SyntaxOf('baz'), 'verbatim'

Given muse;
<code>foo <em>bar</em> baz</code>

Execute (code tag):
  AssertEqual SyntaxOf('foo'), 'code'
  AssertEqual SyntaxOf('bar'), 'code'
  AssertEqual SyntaxOf('baz'), 'code'

Given muse;
=foo <em>bar</em> baz=

Execute (lightweight code markup):
  AssertEqual SyntaxOf('foo'), 'code'
  AssertEqual SyntaxOf('bar'), 'code'
  AssertEqual SyntaxOf('baz'), 'code'

Given muse;
foo~~bar

Execute (non-breaking space):
  AssertEqual SyntaxOf('\~\~'), 'nbsp'
